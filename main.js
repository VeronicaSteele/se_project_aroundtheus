!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleCardClick=s}_setEventListeners(){this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card__list").cloneNode(!0),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}}var t=class{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners(),this._formElement.addEventListener("submit",(function(e){e.preventDefault()}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}};class s{constructor(e){this._popupElement=document.querySelector(e)}_handleEscClose=e=>{"Escape"===e.key&&this.closeModal()};openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal__overlay")||e.target.classList.contains("modal__close"))&&this.closeModal()}))}}class o extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t.bind(this),this._setEventListeners()}closeModal(){this._popupForm.reset(),super.closeModal()}_setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)}))}_getInputValues(){const e={};return this._popupForm.querySelectorAll(".modal__input").forEach((t=>{e[t.name]=t.value})),e}}const r=document.querySelector("#profile-edit-modal"),n=document.querySelector("#profile__title"),i=document.querySelector("#profile__description"),a=document.querySelector("#title-input"),l=document.querySelector("#profile-description"),c=(r.querySelector(".modal__form"),document.querySelector("#card-template").content.querySelector(".card__list"),document.querySelector(".card__item"),document.querySelector("#add-card-modal").querySelector("#add-card-form")),d=(c.querySelector("#modal-add"),c.querySelector("#url-input"),document.querySelector("#view-card-modal")),u=(d.querySelector(".modal__image-container_popup"),d.querySelector(".modal__image-container_heading"),new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._cardListEl=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._cardListEl.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=S(e);u.addItem(t)}},".card__item"));u.renderItems();const _=document.querySelector(".profile__add-button"),m=document.querySelector("#profile-edit-button"),p={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};new t(p,document.querySelector("#profile-edit-form")).enableValidation();const h=new t(p,c);h.enableValidation();const E=new class extends s{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__image"),this._caption=this._popupElement.querySelector(".modal__caption")}openModal(e){let{name:t,link:s}=e;this._image.src=s,this._image.alt=t,this._caption.textContent=t,super.openModal()}}("#view-card-modal");function S(t){return new e(t,"#card-template",f).getView()}function f(e,t){E.openModal({name:e,link:t})}E.setEventListeners();const v=new o("#add-card-modal",(function(e){const t=S(e);u.addItem(t),v.closeModal()}));v.setEventListeners(),_.addEventListener("click",(()=>{h.resetValidation(),v.openModal()}));const y=new class{constructor(e){let{profileTitle:t,profileDescription:s}=e;this._profileTitle=t,this._profileDescription=s}getUserInfo(){return{name:this._profileTitle.textContent,description:this._profileDescription.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._profileTitle.textContent=t,this._profileDescription.textContent=s}}({profileTitle:n,profileDescription:i}),g=new o("#profile-edit-modal",(function(e){console.log(e),y.setUserInfo({name:e.title,description:e.description}),console.log("test"),g.closeModal(),console.log("test2")}));g.setEventListeners(),m.addEventListener("click",(()=>{const e=y.getUserInfo();a.value=e.name.trim(),l.value=e.description.trim(),g.openModal()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQWVsRyxpQkFBaUIsU0FBUyxLQUN2QyxNQUFNcUgsRUFBV1gsRUFBU0csY0FDMUIvQixFQUFrQkosTUFBUTJDLEVBQVM3SCxLQUFLOEgsT0FDeEN2QyxFQUF3QkwsTUFBUTJDLEVBQVNQLFlBQVlRLE9BQ3JETCxFQUFleEQsV0FBVyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSwgY2FyZFNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2spIHtcclxuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgLy9kZWxldGUgYnV0dG9uXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQoKTtcclxuICAgICAgfSk7XHJcbiAgICAvLyBMaWtlIGJ1dHRvblxyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlTGlrZUljb24oKTtcclxuICAgICAgfSk7XHJcbiAgICAvL1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVEZWxldGVDYXJkKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG4gIF9oYW5kbGVMaWtlSWNvbigpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VmlldygpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpc3RcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlLmFsdCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgLy9yZXR1cm4gdGhlIGNhcmRcclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcbn1cclxuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oXHJcbiAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcilcclxuICAgICk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvclxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRMaXN0KSkge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICAvL3RoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xyXG4iLCJpbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi9Qb3B1cFdpdGhGb3JtXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICB9XHJcbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZU1vZGFsKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgb3Blbk1vZGFsKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2VNb2RhbCgpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2dCkgPT4ge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fb3ZlcmxheVwiKSB8fFxyXG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHRoaXMuY2xvc2VNb2RhbCgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdC5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbiAgY2xvc2VNb2RhbCgpIHtcclxuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xyXG4gICAgc3VwZXIuY2xvc2VNb2RhbCgpO1xyXG4gIH1cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGNvbnN0IGZvcm1WYWx1ZXMgPSB0aGlzLl9nZXRJbnB1dFZhbHVlcygpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KGZvcm1WYWx1ZXMpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XHJcbiAgICBjb25zdCBpbnB1dEVsZW1lbnRzID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gICAgaW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGlucHV0VmFsdWVzO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFBvcHVwIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwXCI7XHJcblxyXG5jb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhdGVtYXIuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG5cclxuY29uc3QgY2FyZERhdGEgPSB7XHJcbiAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbn07XHJcblxyXG4vLyAgICAgICAgICAgICAgICAgICAgQ29uc3RhbnRzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vXHJcbi8vY29uc3QgY2FyZHNXcmFwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saXN0XCIpO1xyXG5jb25zdCBwcm9maWxlRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtbW9kYWxcIik7XHJcbmNvbnN0IHByb2ZpbGVUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZV9fdGl0bGVcIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XHJcbmNvbnN0IHByb2ZpbGVUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0aXRsZS1pbnB1dFwiKTtcclxuY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZGVzY3JpcHRpb25cIik7XHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnRcclxuICAucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpXHJcbiAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saXN0XCIpO1xyXG5cclxuY29uc3QgY2FyZExpc3RFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faXRlbVwiKTtcclxuY29uc3QgYWRkTmV3Q2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1tb2RhbFwiKTtcclxuY29uc3QgYWRkQ2FyZEZvcm1FbGVtZW50ID0gYWRkTmV3Q2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtZm9ybVwiKTtcclxuY29uc3QgY2FyZFRpdGxlSW5wdXQgPSBhZGRDYXJkRm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1hZGRcIik7XHJcbmNvbnN0IGNhcmRVcmxJbnB1dCA9IGFkZENhcmRGb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI3VybC1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IHByZXZpZXdJbWFnZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN2aWV3LWNhcmQtbW9kYWxcIik7XHJcbmNvbnN0IGltYWdlUHJldmlldyA9IHByZXZpZXdJbWFnZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIubW9kYWxfX2ltYWdlLWNvbnRhaW5lcl9wb3B1cFwiXHJcbik7XHJcbmNvbnN0IGltYWdlQ2FwdGlvbiA9IHByZXZpZXdJbWFnZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIubW9kYWxfX2ltYWdlLWNvbnRhaW5lcl9oZWFkaW5nXCJcclxuKTtcclxuY29uc3Qgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gIHtcclxuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXHJcbiAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmRFbCA9IHJlbmRlckNhcmQoY2FyZERhdGEpO1xyXG4gICAgICBzZWN0aW9uLmFkZEl0ZW0oY2FyZEVsKTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBcIi5jYXJkX19pdGVtXCJcclxuKTtcclxuc2VjdGlvbi5yZW5kZXJJdGVtcygpO1xyXG5cclxuLy8gQnV0dG9ucy8vXHJcblxyXG5jb25zdCBhZGROZXdDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG5cclxuY29uc3QgcHJvZmlsZUVkaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIik7XHJcblxyXG4vKiAgICAgICAgICAgICAgICAgICAgRnVuY3Rpb25zICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXHJcblxyXG4vLyAgICAgICAgICAgICAgICBWYWxpZGF0aW9uXHJcblxyXG5jb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XHJcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCIsXHJcbn07XHJcbmNvbnN0IGVkaXRQcm9maWxlRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWZvcm1cIik7XHJcbmNvbnN0IGVkaXRQcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gIHZhbGlkYXRpb25TZXR0aW5ncyxcclxuICBlZGl0UHJvZmlsZUZvcm1cclxuKTtcclxuZWRpdFByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IGFkZENhcmRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLFxyXG4gIGFkZENhcmRGb3JtRWxlbWVudFxyXG4pO1xyXG5hZGRDYXJkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIC8vY29uc3QgbmV3RGVzY3JpcHRpb24gPSBpbnB1dFZhbHVlcy5kZXNjcmlwdGlvbjtcclxuICAvLyBjb25zdCBuZXdOYW1lID0gaW5wdXRWYWx1ZXMubmFtZTtcclxuICBjb25zb2xlLmxvZyhpbnB1dFZhbHVlcyk7XHJcbiAgdXNlckluZm8uc2V0VXNlckluZm8oe1xyXG4gICAgbmFtZTogaW5wdXRWYWx1ZXMudGl0bGUsXHJcbiAgICBkZXNjcmlwdGlvbjogaW5wdXRWYWx1ZXMuZGVzY3JpcHRpb24sXHJcbiAgfSk7XHJcbiAgY29uc29sZS5sb2coXCJ0ZXN0XCIpO1xyXG4gIG5ld1Byb2ZpbGVFZGl0LmNsb3NlTW9kYWwoKTtcclxuICBjb25zb2xlLmxvZyhcInRlc3QyXCIpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIGNvbnN0IGNhcmRFbCA9IHJlbmRlckNhcmQoaW5wdXRWYWx1ZXMpO1xyXG4gIHNlY3Rpb24uYWRkSXRlbShjYXJkRWwpO1xyXG4gIG5ld0NhcmRQb3B1cC5jbG9zZU1vZGFsKCk7XHJcbn1cclxuXHJcbi8vTmV3IEltYWdlIFBvcHVwXHJcbmNvbnN0IG5ld0ltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjdmlldy1jYXJkLW1vZGFsXCIpO1xyXG5uZXdJbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5mdW5jdGlvbiByZW5kZXJDYXJkKGRhdGEpIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoZGF0YSwgXCIjY2FyZC10ZW1wbGF0ZVwiLCBoYW5kbGVDYXJkQ2xpY2spO1xyXG4gIHJldHVybiBjYXJkLmdldFZpZXcoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2FyZENsaWNrKG5hbWUsIGxpbmspIHtcclxuICBuZXdJbWFnZVBvcHVwLm9wZW5Nb2RhbCh7IG5hbWUsIGxpbmsgfSk7XHJcbn1cclxuLy9OZXcgQ2FyZCBQb3B1cFxyXG5jb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIiNhZGQtY2FyZC1tb2RhbFwiLFxyXG4gIGhhbmRsZUFkZENhcmRGb3JtU3VibWl0XHJcbik7XHJcbm5ld0NhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5hZGROZXdDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgYWRkQ2FyZEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbiAgbmV3Q2FyZFBvcHVwLm9wZW5Nb2RhbCgpO1xyXG59KTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHsgcHJvZmlsZVRpdGxlLCBwcm9maWxlRGVzY3JpcHRpb24gfSk7XHJcblxyXG4vL1Byb2ZpbGUgRWRpdCBQb3B1cFxyXG5jb25zdCBuZXdQcm9maWxlRWRpdCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLFxyXG4gIGhhbmRsZVByb2ZpbGVFZGl0U3VibWl0XHJcbik7XHJcbm5ld1Byb2ZpbGVFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vKiAgICAgICAgICAgICAgICAgICAgIEV2ZW50IExpc3RlbmVycyAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cclxuXHJcbnByb2ZpbGVFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY29uc3QgdXNlckRhdGEgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIHByb2ZpbGVUaXRsZUlucHV0LnZhbHVlID0gdXNlckRhdGEubmFtZS50cmltKCk7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB1c2VyRGF0YS5kZXNjcmlwdGlvbi50cmltKCk7XHJcbiAgbmV3UHJvZmlsZUVkaXQub3Blbk1vZGFsKCk7XHJcbn0pO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBzZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jYXJkTGlzdEVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgfVxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShjYXJkRWwpIHtcclxuICAgIHRoaXMuX2NhcmRMaXN0RWwucHJlcGVuZChjYXJkRWwpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXB0aW9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XHJcbiAgfVxyXG5cclxuICBvcGVuTW9kYWwoeyBuYW1lLCBsaW5rIH0pIHtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5fY2FwdGlvbi50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBzdXBlci5vcGVuTW9kYWwoKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKHsgcHJvZmlsZVRpdGxlLCBwcm9maWxlRGVzY3JpcHRpb24gfSkge1xyXG4gICAgdGhpcy5fcHJvZmlsZVRpdGxlID0gcHJvZmlsZVRpdGxlO1xyXG4gICAgdGhpcy5fcHJvZmlsZURlc2NyaXB0aW9uID0gcHJvZmlsZURlc2NyaXB0aW9uO1xyXG4gIH1cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIGNvbnN0IHVzZXJJbmZvID0ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9wcm9maWxlVGl0bGUudGV4dENvbnRlbnQsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLl9wcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHVzZXJJbmZvO1xyXG4gIH1cclxuICBzZXRVc2VySW5mbyh7IG5hbWUsIGRlc2NyaXB0aW9uIH0pIHtcclxuICAgIHRoaXMuX3Byb2ZpbGVUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9wcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBkZXNjcmlwdGlvbjtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVDYXJkQ2xpY2siLCJ0aGlzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfY2FyZEVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVEZWxldGVDYXJkIiwiX2hhbmRsZUxpa2VJY29uIiwicmVtb3ZlIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiZ2V0VmlldyIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsInRleHRDb250ZW50IiwiX2NhcmRJbWFnZSIsInNyYyIsImFsdCIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdXR0b24iLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvckVsZW1lbnQiLCJpZCIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGFzSW52YWxpZElucHV0Iiwic29tZSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImRpc2FibGVkIiwiZm9yRWFjaCIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJrZXkiLCJjbG9zZU1vZGFsIiwib3Blbk1vZGFsIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX3BvcHVwRm9ybSIsIl9oYW5kbGVGb3JtU3VibWl0IiwiYmluZCIsInJlc2V0IiwiZSIsImZvcm1WYWx1ZXMiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJwcm9maWxlRWRpdE1vZGFsIiwicHJvZmlsZVRpdGxlIiwicHJvZmlsZURlc2NyaXB0aW9uIiwicHJvZmlsZVRpdGxlSW5wdXQiLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsImFkZENhcmRGb3JtRWxlbWVudCIsInByZXZpZXdJbWFnZU1vZGFsIiwic2VjdGlvbiIsIl9yZWYiLCJzZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY2FyZExpc3RFbCIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImFkZEl0ZW0iLCJjYXJkRWwiLCJwcmVwZW5kIiwiY2FyZERhdGEiLCJyZW5kZXJDYXJkIiwiYWRkTmV3Q2FyZEJ1dHRvbiIsInByb2ZpbGVFZGl0QnRuIiwidmFsaWRhdGlvblNldHRpbmdzIiwiRm9ybVZhbGlkYXRvciIsImFkZENhcmRGb3JtVmFsaWRhdG9yIiwibmV3SW1hZ2VQb3B1cCIsIl9pbWFnZSIsIl9jYXB0aW9uIiwibmV3Q2FyZFBvcHVwIiwidXNlckluZm8iLCJfcHJvZmlsZVRpdGxlIiwiX3Byb2ZpbGVEZXNjcmlwdGlvbiIsImdldFVzZXJJbmZvIiwiZGVzY3JpcHRpb24iLCJzZXRVc2VySW5mbyIsIl9yZWYyIiwibmV3UHJvZmlsZUVkaXQiLCJjb25zb2xlIiwibG9nIiwidGl0bGUiLCJ1c2VyRGF0YSIsInRyaW0iXSwic291cmNlUm9vdCI6IiJ9